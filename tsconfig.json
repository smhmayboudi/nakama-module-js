{
  "compilerOptions": {
    // "outDir": "./",                                   /* Specify an output folder for all emitted files. */
    "removeComments": true,                           /* Disable emitting comments. */
    // "noEmit": true,                                   /* Disable emitting files from a compilation. */
    // "importHelpers": true,                            /* Allow importing helper functions from tslib once per project, instead of including them per-file. */
    // "importsNotUsedAsValues": "remove",               /* Specify emit/checking behavior for imports that are only used for types */
    // "downlevelIteration": true,                       /* Emit more compliant, but verbose and less performant JavaScript for iteration. */
    // "sourceRoot": "",                                 /* Specify the root path for debuggers to find the reference source code. */
    // "mapRoot": "",                                    /* Specify the location where debugger should locate map files instead of generated locations. */
    // "inlineSourceMap": true,                          /* Include sourcemap files inside the emitted JavaScript. */
    // "inlineSources": true,                            /* Include source code in the sourcemaps inside the emitted JavaScript. */
    // "emitBOM": true,                                  /* Emit a UTF-8 Byte Order Mark (BOM) in the beginning of output files. */
    // "newLine": "crlf",                                /* Set the newline character for emitting files. */
    // "stripInternal": true,                            /* Disable emitting declarations that have `@internal` in their JSDoc comments. */
    // "noEmitHelpers": true,                            /* Disable generating custom helper functions like `__extends` in compiled output. */
    // "noEmitOnError": true,                            /* Disable emitting files if any type checking errors are reported. */
    // "preserveConstEnums": true,                       /* Disable erasing `const enum` declarations in generated code. */
    // "declarationDir": "./",                           /* Specify the output directory for generated declaration files. */
    // "preserveValueImports": true,                     /* Preserve unused imported values in the JavaScript output that would otherwise be removed. */
    /* Interop Constraints */
    // "isolatedModules": true,                          /* Ensure that each file can be safely transpiled without relying on other imports. */
    // "allowSyntheticDefaultImports": true,             /* Allow 'import x from y' when a module doesn't have a default export. */
    "esModuleInterop": true, /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables `allowSyntheticDefaultImports` for type compatibility. */ // "preserveSymlinks": true,                         /* Disable resolving symlinks to their realpath. This correlates to the same flag in node. */
    "forceConsistentCasingInFileNames": true, /* Ensure that casing is correct in imports. */ // "types": [],                                      /* Specify type package names to be included without being referenced in a source file. */
    // "allowUmdGlobalAccess": true,                     /* Allow accessing UMD globals from modules. */
    // "resolveJsonModule": true,                        /* Enable importing .json files */
    // "noResolve": true,                                /* Disallow `import`s, `require`s or `<reference>`s from expanding the number of files TypeScript should add to a project. */
    /* JavaScript Support */
    // "allowJs": true,                                  /* Allow JavaScript files to be a part of your program. Use the `checkJS` option to get errors from these files. */
    // "checkJs": true,                                  /* Enable error reporting in type-checked JavaScript files. */
    // "maxNodeModuleJsDepth": 1,                        /* Specify the maximum folder depth used for checking JavaScript files from `node_modules`. Only applicable with `allowJs`. */
    /* Emit */
    // "declaration": true,                              /* Generate .d.ts files from TypeScript and JavaScript files in your project. */
    // "declarationMap": true,                           /* Create sourcemaps for d.ts files. */
    // "emitDeclarationOnly": true,                      /* Only output d.ts files and not JavaScript files. */
    // "sourceMap": true,                                /* Create source map files for emitted JavaScript files. */
    "outFile": "./build/index.js", /* Specify a file that bundles all outputs into one JavaScript file. If `declaration` is true, also designates a file that bundles all .d.ts output. */ // "noImplicitAny": true,                            /* Enable error reporting for expressions and declarations with an implied `any` type.. */
    // "strictNullChecks": true,                         /* When type checking, take into account `null` and `undefined`. */
    // "strictFunctionTypes": true,                      /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */
    // "strictBindCallApply": true,                      /* Check that the arguments for `bind`, `call`, and `apply` methods match the original function. */
    // "strictPropertyInitialization": true,             /* Check for class properties that are declared but not set in the constructor. */
    // "noImplicitThis": true,                           /* Enable error reporting when `this` is given the type `any`. */
    // "useUnknownInCatchVariables": true,               /* Type catch clause variables as 'unknown' instead of 'any'. */
    // "alwaysStrict": true,                             /* Ensure 'use strict' is always emitted. */
    // "noUnusedLocals": true,                           /* Enable error reporting when a local variables aren't read. */
    // "noUnusedParameters": true,                       /* Raise an error when a function parameter isn't read */
    // "exactOptionalPropertyTypes": true,               /* Interpret optional property types as written, rather than adding 'undefined'. */
    // "noImplicitReturns": true,                        /* Enable error reporting for codepaths that do not explicitly return in a function. */
    // "noFallthroughCasesInSwitch": true,               /* Enable error reporting for fallthrough cases in switch statements. */
    // "noUncheckedIndexedAccess": true,                 /* Include 'undefined' in index signature results */
    // "noImplicitOverride": true,                       /* Ensure overriding members in derived classes are marked with an override modifier. */
    // "noPropertyAccessFromIndexSignature": true,       /* Enforces using indexed accessors for keys declared using an indexed type */
    // "allowUnusedLabels": true,                        /* Disable error reporting for unused labels. */
    // "allowUnreachableCode": true,                     /* Disable error reporting for unreachable code. */
    /* Completeness */
    // "skipDefaultLibCheck": true,                      /* Skip type checking .d.ts files that are included with TypeScript. */
    "skipLibCheck": true, /* Skip type checking all .d.ts files. */ /* Type Checking */
    "strict": true, /* Enable all strict type-checking options. */ /* Visit https://aka.ms/tsconfig.json to read more about this file */
    /* Projects */
    // "incremental": true,                              /* Enable incremental compilation */
    // "composite": true,                                /* Enable constraints that allow a TypeScript project to be used with project references. */
    // "tsBuildInfoFile": "./",                          /* Specify the folder for .tsbuildinfo incremental compilation files. */
    // "disableSourceOfProjectReferenceRedirect": true,  /* Disable preferring source files instead of declaration files when referencing composite projects */
    // "disableSolutionSearching": true,                 /* Opt a project out of multi-project reference checking when editing. */
    // "disableReferencedProjectLoad": true,             /* Reduce the number of projects loaded automatically by TypeScript. */
    /* Language and Environment */
    "target": "es5", /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */ // "lib": [],                                        /* Specify a set of bundled library declaration files that describe the target runtime environment. */
    // "jsx": "preserve",                                /* Specify what JSX code is generated. */
    // "experimentalDecorators": true,                   /* Enable experimental support for TC39 stage 2 draft decorators. */
    // "emitDecoratorMetadata": true,                    /* Emit design-type metadata for decorated declarations in source files. */
    // "jsxFactory": "",                                 /* Specify the JSX factory function used when targeting React JSX emit, e.g. 'React.createElement' or 'h' */
    // "jsxFragmentFactory": "",                         /* Specify the JSX Fragment reference used for fragments when targeting React JSX emit e.g. 'React.Fragment' or 'Fragment'. */
    // "jsxImportSource": "",                            /* Specify module specifier used to import the JSX factory functions when using `jsx: react-jsx*`.` */
    // "reactNamespace": "",                             /* Specify the object invoked for `createElement`. This only applies when targeting `react` JSX emit. */
    // "noLib": true,                                    /* Disable including any library files, including the default lib.d.ts. */
    // "useDefineForClassFields": true,                  /* Emit ECMAScript-standard-compliant class fields. */
    /* Modules */
    // "module": "commonjs",                                /* Specify what module code is generated. */
    // "rootDir": "./",                                  /* Specify the root folder within your source files. */
    // "moduleResolution": "node",                       /* Specify how TypeScript looks up a file from a given module specifier. */
    // "baseUrl": "./",                                  /* Specify the base directory to resolve non-relative module names. */
    // "paths": {},                                      /* Specify a set of entries that re-map imports to additional lookup locations. */
    // "rootDirs": [],                                   /* Allow multiple folders to be treated as one when resolving modules. */
    "typeRoots": [
      "./node_modules"
    ] /* Specify multiple folders that act like `./node_modules/@types`. */
  },
  "files": [
    "src/util/redpanda.ts",
    "src/after/afterAddFriends.ts",
    "src/after/afterAddGroupUsers.ts",
    "src/after/afterAuthenticateApple.ts",
    "src/after/afterAuthenticateCustom.ts",
    "src/after/afterAuthenticateDevice.ts",
    "src/after/afterAuthenticateEmail.ts",
    "src/after/afterAuthenticateFacebook.ts",
    "src/after/afterAuthenticateFacebookInstantGame.ts",
    "src/after/afterAuthenticateGameCenter.ts",
    "src/after/afterAuthenticateGoogle.ts",
    "src/after/afterAuthenticateSteam.ts",
    "src/after/afterBanGroupUsers.ts",
    "src/after/afterBlockFriends.ts",
    "src/after/afterChannelJoin.ts",
    "src/after/afterChannelLeave.ts",
    "src/after/afterChannelMessageRemove.ts",
    "src/after/afterChannelMessageSend.ts",
    "src/after/afterChannelMessageUpdate.ts",
    "src/after/afterCreateGroup.ts",
    "src/after/afterDeleteFriends.ts",
    "src/after/afterDeleteGroup.ts",
    "src/after/afterDeleteLeaderboardRecord.ts",
    "src/after/afterDeleteNotification.ts",
    "src/after/afterDeleteStorageObjects.ts",
    "src/after/afterDemoteGroupUsers.ts",
    "src/after/afterEvent.ts",
    "src/after/afterGetAccount.ts",
    "src/after/afterGetUsers.ts",
    "src/after/afterImportFacebookFriends.ts",
    "src/after/afterImportSteamFriends.ts",
    "src/after/afterJoinGroup.ts",
    "src/after/afterJoinTournament.ts",
    "src/after/afterKickGroupUsers.ts",
    "src/after/afterLeaveGroup.ts",
    "src/after/afterLinkApple.ts",
    "src/after/afterLinkCustom.ts",
    "src/after/afterLinkDevice.ts",
    "src/after/afterLinkEmail.ts",
    "src/after/afterLinkFacebook.ts",
    "src/after/afterLinkFacebookInstantGame.ts",
    "src/after/afterLinkGameCenter.ts",
    "src/after/afterLinkGoogle.ts",
    "src/after/afterLinkSteam.ts",
    "src/after/afterListChannelMessages.ts",
    "src/after/afterListFriends.ts",
    "src/after/afterListGroupUsers.ts",
    "src/after/afterListGroups.ts",
    "src/after/afterListLeaderboardRecords.ts",
    "src/after/afterListLeaderboardRecordsAroundOwner.ts",
    "src/after/afterListMatches.ts",
    "src/after/afterListNotifications.ts",
    "src/after/afterListStorageObjects.ts",
    "src/after/afterListTournamentRecords.ts",
    "src/after/afterListTournamentRecordsAroundOwner.ts",
    "src/after/afterListTournaments.ts",
    "src/after/afterListUserGroups.ts",
    "src/after/afterMatchCreate.ts",
    "src/after/afterMatchDataSend.ts",
    "src/after/afterMatchJoin.ts",
    "src/after/afterMatchLeave.ts",
    "src/after/afterMatchmakerAdd.ts",
    "src/after/afterMatchmakerRemove.ts",
    "src/after/afterPing.ts",
    "src/after/afterPong.ts",
    "src/after/afterPromoteGroupUsers.ts",
    "src/after/afterReadStorageObjects.ts",
    "src/after/afterStatusFollow.ts",
    "src/after/afterStatusUnfollow.ts",
    "src/after/afterStatusUpdate.ts",
    "src/after/afterUnlinkApple.ts",
    "src/after/afterUnlinkCustom.ts",
    "src/after/afterUnlinkDevice.ts",
    "src/after/afterUnlinkEmail.ts",
    "src/after/afterUnlinkFacebook.ts",
    "src/after/afterUnlinkFacebookInstantGame.ts",
    "src/after/afterUnlinkGameCenter.ts",
    "src/after/afterUnlinkGoogle.ts",
    "src/after/afterUnlinkSteam.ts",
    "src/after/afterUpdateAccount.ts",
    "src/after/afterUpdateGroup.ts",
    "src/after/afterValidatePurchaseApple.ts",
    "src/after/afterValidatePurchaseGoogle.ts",
    "src/after/afterValidatePurchaseHuawei.ts",
    "src/after/afterWriteLeaderboardRecord.ts",
    "src/after/afterWriteStorageObjects.ts",
    "src/after/afterWriteTournamentRecord.ts",
    "src/before/beforeAddFriends.ts",
    "src/before/beforeAddGroupUsers.ts",
    "src/before/beforeAuthenticateApple.ts",
    "src/before/beforeAuthenticateCustom.ts",
    "src/before/beforeAuthenticateDevice.ts",
    "src/before/beforeAuthenticateEmail.ts",
    "src/before/beforeAuthenticateFacebook.ts",
    "src/before/beforeAuthenticateFacebookInstantGame.ts",
    "src/before/beforeAuthenticateGameCenter.ts",
    "src/before/beforeAuthenticateGoogle.ts",
    "src/before/beforeAuthenticateSteam.ts",
    "src/before/beforeBanGroupUsers.ts",
    "src/before/beforeBlockFriends.ts",
    "src/before/beforeChannelJoin.ts",
    "src/before/beforeChannelLeave.ts",
    "src/before/beforeChannelMessageRemove.ts",
    "src/before/beforeChannelMessageSend.ts",
    "src/before/beforeChannelMessageUpdate.ts",
    "src/before/beforeCreateGroup.ts",
    "src/before/beforeDeleteFriends.ts",
    "src/before/beforeDeleteGroup.ts",
    "src/before/beforeDeleteLeaderboardRecord.ts",
    "src/before/beforeDeleteNotification.ts",
    "src/before/beforeDeleteStorageObjects.ts",
    "src/before/beforeDemoteGroupUsers.ts",
    "src/before/beforeEvent.ts",
    "src/before/beforeGetAccount.ts",
    "src/before/beforeGetUsers.ts",
    "src/before/beforeImportFacebookFriends.ts",
    "src/before/beforeImportSteamFriends.ts",
    "src/before/beforeJoinGroup.ts",
    "src/before/beforeJoinTournament.ts",
    "src/before/beforeKickGroupUsers.ts",
    "src/before/beforeLeaveGroup.ts",
    "src/before/beforeLinkApple.ts",
    "src/before/beforeLinkCustom.ts",
    "src/before/beforeLinkDevice.ts",
    "src/before/beforeLinkEmail.ts",
    "src/before/beforeLinkFacebook.ts",
    "src/before/beforeLinkFacebookInstantGame.ts",
    "src/before/beforeLinkGameCenter.ts",
    "src/before/beforeLinkGoogle.ts",
    "src/before/beforeLinkSteam.ts",
    "src/before/beforeListChannelMessages.ts",
    "src/before/beforeListFriends.ts",
    "src/before/beforeListGroupUsers.ts",
    "src/before/beforeListGroups.ts",
    "src/before/beforeListLeaderboardRecords.ts",
    "src/before/beforeListLeaderboardRecordsAroundOwner.ts",
    "src/before/beforeListMatches.ts",
    "src/before/beforeListNotifications.ts",
    "src/before/beforeListStorageObjects.ts",
    "src/before/beforeListTournamentRecords.ts",
    "src/before/beforeListTournamentRecordsAroundOwner.ts",
    "src/before/beforeListTournaments.ts",
    "src/before/beforeListUserGroups.ts",
    "src/before/beforeMatchCreate.ts",
    "src/before/beforeMatchDataSend.ts",
    "src/before/beforeMatchJoin.ts",
    "src/before/beforeMatchLeave.ts",
    "src/before/beforeMatchmakerAdd.ts",
    "src/before/beforeMatchmakerRemove.ts",
    "src/before/beforePing.ts",
    "src/before/beforePong.ts",
    "src/before/beforePromoteGroupUsers.ts",
    "src/before/beforeReadStorageObjects.ts",
    "src/before/beforeStatusFollow.ts",
    "src/before/beforeStatusUnfollow.ts",
    "src/before/beforeStatusUpdate.ts",
    "src/before/beforeUnlinkApple.ts",
    "src/before/beforeUnlinkCustom.ts",
    "src/before/beforeUnlinkDevice.ts",
    "src/before/beforeUnlinkEmail.ts",
    "src/before/beforeUnlinkFacebook.ts",
    "src/before/beforeUnlinkFacebookInstantGame.ts",
    "src/before/beforeUnlinkGameCenter.ts",
    "src/before/beforeUnlinkGoogle.ts",
    "src/before/beforeUnlinkSteam.ts",
    "src/before/beforeUpdateAccount.ts",
    "src/before/beforeUpdateGroup.ts",
    "src/before/beforeValidatePurchaseApple.ts",
    "src/before/beforeValidatePurchaseGoogle.ts",
    "src/before/beforeValidatePurchaseHuawei.ts",
    "src/before/beforeWriteLeaderboardRecord.ts",
    "src/before/beforeWriteStorageObjects.ts",
    "src/before/beforeWriteTournamentRecord.ts",
    "src/register/registerLeaderboardReset.ts",
    "src/register/registerMatch.ts",
    "src/register/registerMatchmakerMatched.ts",
    "src/register/registerTournamentEnd.ts",
    "src/register/registerTournamentReset.ts",
    "src/index.ts",
  ]
}